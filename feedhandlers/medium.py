import html, json, operator, re
from bs4 import BeautifulSoup
from datetime import datetime, timezone
from urllib.parse import parse_qs, quote_plus, urlsplit

import config, utils
from feedhandlers import rss

import logging

logger = logging.getLogger(__name__)


def add_image(image, caption='', width=1000):
    img_src = 'https://miro.medium.com/max/{}/{}'.format(width, image['id'])
    if image.get('originalWidth'):
        if image['originalWidth'] < width:
            img_src = '{}/image?url={}&width={}'.format(config.server, quote_plus(img_src), width)
    return utils.add_image(img_src, caption)


def get_apollo_state_content(url):
    page_html = utils.get_url_html(url, user_agent='googlecache')
    if not page_html:
        return None
    soup = BeautifulSoup(page_html, 'lxml')
    el = soup.find('script', string=re.compile(r'__APOLLO_STATE__'))
    if not el:
        return None
    i = el.string.find('{')
    j = el.string.rfind('}') + 1
    apollo_state = json.loads(el.string[i:j])
    post_id = 'Post:' + urlsplit(url).path.split('-')[-1]
    if not apollo_state.get(post_id):
        return None
    utils.write_file(apollo_state, './debug/apollo.json')
    post_json = apollo_state[post_id]
    content_json = None
    for key, val in post_json.items():
        if key.startswith('content'):
            content_json = val
            break
    if not content_json:
        return None

    def sub_refs(matchobj):
        nonlocal apollo_state
        ref = json.dumps(apollo_state[matchobj.group(1)])[1:-1]
        return re.sub(r'"__ref": "([^"]+)"', sub_refs, ref)
    paragraphs = re.sub(r'"__ref": "([^"]+)"', sub_refs, json.dumps(content_json['bodyModel']['paragraphs']))
    utils.write_file(paragraphs, './debug/test.txt')
    content_json['bodyModel']['paragraphs'] = json.loads(paragraphs)
    return content_json


def get_content(url, args, site_json, save_debug=False):
    split_url = urlsplit(url)
    post_id = split_url.path.split('-')[-1]
    graphql_url = '{}://{}/_/graphql'.format(split_url.scheme, split_url.netloc)
    data = {
        "operationName": "PostPageQuery",
        "variables": {
            "postId": post_id,
            "postMeteringOptions": {
                "forceTruncation": False
            },
            "awardType": "STAFF_PICK"
        },
        "query": "query PostPageQuery($postId: ID!, $postMeteringOptions: PostMeteringOptions, $awardType: AwardType!) {\n  postResult(id: $postId) {\n    __typename\n    ...PostResultError_postResult\n    ... on Post {\n      id\n      canonicalUrl\n      collection {\n        id\n        googleAnalyticsId\n        ...PostCollectionHeader_collection\n        ...PublisherHeader_publisher\n        __typename\n      }\n      content(postMeteringOptions: $postMeteringOptions) {\n        isLockedPreviewOnly\n        validatedShareKey\n        __typename\n      }\n      creator {\n        id\n        name\n        username\n        imageId\n        ...PublisherHeader_publisher\n        ...SuspendedBannerLoader_user\n        __typename\n      }\n      customStyleSheet {\n        id\n        ...CustomThemeProvider_customStyleSheet\n        __typename\n      }\n      isPublished\n      isLocked\n      license\n      collaborators {\n        id\n        __typename\n      }\n      ...NewsletterPromo_post\n      ...Wall_post\n      ...InteractivePostBody_post\n      ...WithResponsesSidebar_post\n      ...PostCanonicalizer_post\n      ...PostFooterActionsBar_post\n      ...PostHeader_post\n      ...PostBylineHeader_post\n      ...usePostUrl_post\n      ...buildBranchViewData_post\n      ...PostMetadata_post\n      ...SuspendedBannerLoader_post\n      ...Footer_post\n      ...OverflowMenuButtonWithNegativeSignal_post\n      ...ThanksTo_post\n      countToShowAwardBadge: awards(type: $awardType, paging: {limit: 1}) {\n        totalCount\n        __typename\n      }\n      __typename\n    }\n  }\n}\n\nfragment PostResultError_postResult on PostResult {\n  __typename\n  ... on Post {\n    id\n    __typename\n  }\n  ... on UnavailableForLegalReasons {\n    ...UnavailableForLegalReasonsScreen_unavailableForLegalReasons\n    __typename\n  }\n  ... on WithheldInCountry {\n    ...WithheldInCountryScreen_withheldInCountry\n    __typename\n  }\n}\n\nfragment UnavailableForLegalReasonsScreen_unavailableForLegalReasons on UnavailableForLegalReasons {\n  lumenId\n  __typename\n}\n\nfragment WithheldInCountryScreen_withheldInCountry on WithheldInCountry {\n  lumenId\n  __typename\n}\n\nfragment PostCollectionHeader_collection on Collection {\n  id\n  domain\n  name\n  slug\n  ...CollectionAvatar_collection\n  ...PublisherFollowButton_publisher\n  __typename\n}\n\nfragment CollectionAvatar_collection on Collection {\n  name\n  avatar {\n    id\n    __typename\n  }\n  ...collectionUrl_collection\n  __typename\n  id\n}\n\nfragment collectionUrl_collection on Collection {\n  id\n  domain\n  slug\n  __typename\n}\n\nfragment PublisherFollowButton_publisher on Publisher {\n  __typename\n  ... on Collection {\n    ...CollectionFollowButton_collection\n    __typename\n    id\n  }\n  ... on User {\n    ...UserFollowButton_user\n    __typename\n    id\n  }\n}\n\nfragment CollectionFollowButton_collection on Collection {\n  __typename\n  id\n  name\n  slug\n  ...collectionUrl_collection\n  ...SusiClickable_collection\n}\n\nfragment SusiClickable_collection on Collection {\n  ...SusiContainer_collection\n  __typename\n  id\n}\n\nfragment SusiContainer_collection on Collection {\n  name\n  ...SignInOptions_collection\n  ...SignUpOptions_collection\n  __typename\n  id\n}\n\nfragment SignInOptions_collection on Collection {\n  id\n  name\n  __typename\n}\n\nfragment SignUpOptions_collection on Collection {\n  id\n  name\n  __typename\n}\n\nfragment UserFollowButton_user on User {\n  ...UserFollowButtonSignedIn_user\n  ...UserFollowButtonSignedOut_user\n  __typename\n  id\n}\n\nfragment UserFollowButtonSignedIn_user on User {\n  id\n  name\n  __typename\n}\n\nfragment UserFollowButtonSignedOut_user on User {\n  id\n  ...SusiClickable_user\n  __typename\n}\n\nfragment SusiClickable_user on User {\n  ...SusiContainer_user\n  __typename\n  id\n}\n\nfragment SusiContainer_user on User {\n  ...SignInOptions_user\n  ...SignUpOptions_user\n  __typename\n  id\n}\n\nfragment SignInOptions_user on User {\n  id\n  name\n  __typename\n}\n\nfragment SignUpOptions_user on User {\n  id\n  name\n  __typename\n}\n\nfragment PublisherHeader_publisher on Publisher {\n  id\n  ...PublisherHeaderBackground_publisher\n  ...PublisherHeaderNameplate_publisher\n  ...PublisherHeaderActions_publisher\n  ...PublisherHeaderNav_publisher\n  __typename\n}\n\nfragment PublisherHeaderBackground_publisher on Publisher {\n  __typename\n  id\n  customStyleSheet {\n    ...PublisherHeaderBackground_customStyleSheet\n    __typename\n    id\n  }\n  ... on Collection {\n    colorPalette {\n      tintBackgroundSpectrum {\n        backgroundColor\n        __typename\n      }\n      __typename\n    }\n    isAuroraVisible\n    legacyHeaderBackgroundImage {\n      id\n      originalWidth\n      focusPercentX\n      focusPercentY\n      __typename\n    }\n    ...collectionTintBackgroundTheme_collection\n    __typename\n    id\n  }\n  ...publisherUrl_publisher\n}\n\nfragment PublisherHeaderBackground_customStyleSheet on CustomStyleSheet {\n  id\n  global {\n    colorPalette {\n      background {\n        rgb\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  header {\n    headerScale\n    backgroundImageDisplayMode\n    backgroundImageVerticalAlignment\n    backgroundColorDisplayMode\n    backgroundColor {\n      alpha\n      rgb\n      ...getHexFromColorValue_colorValue\n      ...getOpaqueHexFromColorValue_colorValue\n      __typename\n    }\n    secondaryBackgroundColor {\n      ...getHexFromColorValue_colorValue\n      __typename\n    }\n    postBackgroundColor {\n      ...getHexFromColorValue_colorValue\n      __typename\n    }\n    backgroundImage {\n      ...MetaHeaderBackground_imageMetadata\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment getHexFromColorValue_colorValue on ColorValue {\n  rgb\n  alpha\n  __typename\n}\n\nfragment getOpaqueHexFromColorValue_colorValue on ColorValue {\n  rgb\n  __typename\n}\n\nfragment MetaHeaderBackground_imageMetadata on ImageMetadata {\n  id\n  originalWidth\n  __typename\n}\n\nfragment collectionTintBackgroundTheme_collection on Collection {\n  colorPalette {\n    ...collectionTintBackgroundTheme_colorPalette\n    __typename\n  }\n  customStyleSheet {\n    id\n    ...collectionTintBackgroundTheme_customStyleSheet\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment collectionTintBackgroundTheme_colorPalette on ColorPalette {\n  ...customTintBackgroundTheme_colorPalette\n  __typename\n}\n\nfragment customTintBackgroundTheme_colorPalette on ColorPalette {\n  tintBackgroundSpectrum {\n    ...ThemeUtil_colorSpectrum\n    __typename\n  }\n  __typename\n}\n\nfragment ThemeUtil_colorSpectrum on ColorSpectrum {\n  backgroundColor\n  ...ThemeUtilInterpolateHelpers_colorSpectrum\n  __typename\n}\n\nfragment ThemeUtilInterpolateHelpers_colorSpectrum on ColorSpectrum {\n  colorPoints {\n    ...ThemeUtil_colorPoint\n    __typename\n  }\n  __typename\n}\n\nfragment ThemeUtil_colorPoint on ColorPoint {\n  color\n  point\n  __typename\n}\n\nfragment collectionTintBackgroundTheme_customStyleSheet on CustomStyleSheet {\n  id\n  ...customTintBackgroundTheme_customStyleSheet\n  __typename\n}\n\nfragment customTintBackgroundTheme_customStyleSheet on CustomStyleSheet {\n  id\n  global {\n    colorPalette {\n      primary {\n        colorPalette {\n          ...customTintBackgroundTheme_colorPalette\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment publisherUrl_publisher on Publisher {\n  id\n  __typename\n  ... on Collection {\n    ...collectionUrl_collection\n    __typename\n    id\n  }\n  ... on User {\n    ...userUrl_user\n    __typename\n    id\n  }\n}\n\nfragment userUrl_user on User {\n  __typename\n  id\n  customDomainState {\n    live {\n      domain\n      __typename\n    }\n    __typename\n  }\n  hasSubdomain\n  username\n}\n\nfragment PublisherHeaderNameplate_publisher on Publisher {\n  ...PublisherAvatar_publisher\n  ...PublisherHeaderLogo_publisher\n  ...PublisherFollowersCount_publisher\n  __typename\n}\n\nfragment PublisherAvatar_publisher on Publisher {\n  __typename\n  ... on Collection {\n    id\n    ...CollectionAvatar_collection\n    __typename\n  }\n  ... on User {\n    id\n    ...UserAvatar_user\n    __typename\n  }\n}\n\nfragment UserAvatar_user on User {\n  __typename\n  id\n  imageId\n  mediumMemberAt\n  name\n  username\n  ...userUrl_user\n}\n\nfragment PublisherHeaderLogo_publisher on Publisher {\n  __typename\n  id\n  customStyleSheet {\n    id\n    header {\n      logoImage {\n        id\n        originalHeight\n        originalWidth\n        __typename\n      }\n      appNameColor {\n        ...getHexFromColorValue_colorValue\n        __typename\n      }\n      appNameTreatment\n      __typename\n    }\n    __typename\n  }\n  name\n  ... on Collection {\n    isAuroraVisible\n    logo {\n      id\n      originalHeight\n      originalWidth\n      __typename\n    }\n    __typename\n    id\n  }\n  ...CustomHeaderTooltip_publisher\n  ...publisherUrl_publisher\n}\n\nfragment CustomHeaderTooltip_publisher on Publisher {\n  __typename\n  id\n  customStyleSheet {\n    id\n    header {\n      appNameTreatment\n      nameTreatment\n      __typename\n    }\n    __typename\n  }\n  ... on Collection {\n    isAuroraVisible\n    slug\n    __typename\n    id\n  }\n}\n\nfragment PublisherFollowersCount_publisher on Publisher {\n  id\n  __typename\n  id\n  ... on Collection {\n    slug\n    subscriberCount\n    __typename\n    id\n  }\n  ... on User {\n    socialStats {\n      followerCount\n      __typename\n    }\n    username\n    __typename\n    id\n  }\n}\n\nfragment PublisherHeaderActions_publisher on Publisher {\n  __typename\n  ...MetaHeaderPubMenu_publisher\n  ... on Collection {\n    ...CollectionFollowButton_collection\n    __typename\n    id\n  }\n  ... on User {\n    ...FollowAndSubscribeButtons_user\n    __typename\n    id\n  }\n}\n\nfragment MetaHeaderPubMenu_publisher on Publisher {\n  __typename\n  ... on Collection {\n    ...MetaHeaderPubMenu_publisher_collection\n    __typename\n    id\n  }\n  ... on User {\n    ...MetaHeaderPubMenu_publisher_user\n    __typename\n    id\n  }\n}\n\nfragment MetaHeaderPubMenu_publisher_collection on Collection {\n  id\n  slug\n  name\n  domain\n  newsletterV3 {\n    slug\n    __typename\n    id\n  }\n  ...MutePopoverOptions_collection\n  __typename\n}\n\nfragment MutePopoverOptions_collection on Collection {\n  id\n  __typename\n}\n\nfragment MetaHeaderPubMenu_publisher_user on User {\n  id\n  username\n  ...MutePopoverOptions_creator\n  __typename\n}\n\nfragment MutePopoverOptions_creator on User {\n  id\n  __typename\n}\n\nfragment FollowAndSubscribeButtons_user on User {\n  ...UserFollowButton_user\n  ...UserSubscribeButton_user\n  __typename\n  id\n}\n\nfragment UserSubscribeButton_user on User {\n  id\n  isPartnerProgramEnrolled\n  name\n  viewerEdge {\n    id\n    isFollowing\n    isUser\n    __typename\n  }\n  viewerIsUser\n  newsletterV3 {\n    id\n    ...useNewsletterV3Subscription_newsletterV3\n    __typename\n  }\n  ...useNewsletterV3Subscription_user\n  ...MembershipUpsellModal_user\n  __typename\n}\n\nfragment useNewsletterV3Subscription_newsletterV3 on NewsletterV3 {\n  id\n  type\n  slug\n  name\n  collection {\n    slug\n    __typename\n    id\n  }\n  user {\n    id\n    name\n    username\n    newsletterV3 {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment useNewsletterV3Subscription_user on User {\n  id\n  username\n  newsletterV3 {\n    ...useNewsletterV3Subscription_newsletterV3\n    __typename\n    id\n  }\n  __typename\n}\n\nfragment MembershipUpsellModal_user on User {\n  id\n  name\n  imageId\n  postSubscribeMembershipUpsellShownAt\n  newsletterV3 {\n    id\n    __typename\n  }\n  __typename\n}\n\nfragment PublisherHeaderNav_publisher on Publisher {\n  __typename\n  id\n  customStyleSheet {\n    navigation {\n      navItems {\n        name\n        ...PublisherHeaderNavLink_headerNavigationItem\n        __typename\n      }\n      __typename\n    }\n    __typename\n    id\n  }\n  ...PublisherHeaderNavLink_publisher\n  ... on Collection {\n    domain\n    isAuroraVisible\n    slug\n    navItems {\n      tagSlug\n      title\n      url\n      __typename\n    }\n    __typename\n    id\n  }\n  ... on User {\n    customDomainState {\n      live {\n        domain\n        __typename\n      }\n      __typename\n    }\n    hasSubdomain\n    username\n    about\n    homePostsPublished: homepagePostsConnection(paging: {limit: 1}) {\n      posts {\n        id\n        __typename\n      }\n      __typename\n    }\n    __typename\n    id\n  }\n}\n\nfragment PublisherHeaderNavLink_headerNavigationItem on HeaderNavigationItem {\n  href\n  name\n  tags {\n    id\n    normalizedTagSlug\n    __typename\n  }\n  type\n  __typename\n}\n\nfragment PublisherHeaderNavLink_publisher on Publisher {\n  __typename\n  id\n  ... on Collection {\n    slug\n    __typename\n    id\n  }\n}\n\nfragment SuspendedBannerLoader_user on User {\n  id\n  isSuspended\n  __typename\n}\n\nfragment CustomThemeProvider_customStyleSheet on CustomStyleSheet {\n  id\n  ...customDefaultBackgroundTheme_customStyleSheet\n  ...customStyleSheetFontTheme_customStyleSheet\n  __typename\n}\n\nfragment customDefaultBackgroundTheme_customStyleSheet on CustomStyleSheet {\n  id\n  global {\n    colorPalette {\n      primary {\n        colorPalette {\n          ...customDefaultBackgroundTheme_colorPalette\n          __typename\n        }\n        __typename\n      }\n      background {\n        colorPalette {\n          ...customDefaultBackgroundTheme_colorPalette\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment customDefaultBackgroundTheme_colorPalette on ColorPalette {\n  highlightSpectrum {\n    ...ThemeUtil_colorSpectrum\n    __typename\n  }\n  defaultBackgroundSpectrum {\n    ...ThemeUtil_colorSpectrum\n    __typename\n  }\n  tintBackgroundSpectrum {\n    ...ThemeUtil_colorSpectrum\n    __typename\n  }\n  __typename\n}\n\nfragment customStyleSheetFontTheme_customStyleSheet on CustomStyleSheet {\n  id\n  global {\n    fonts {\n      font1 {\n        name\n        __typename\n      }\n      font2 {\n        name\n        __typename\n      }\n      font3 {\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment NewsletterPromo_post on Post {\n  ... on Post {\n    id\n    collection {\n      __typename\n      id\n      ...NewsletterV3Promo_publisher_Collection\n      ...useShowCollectionNewsletterV3Promo_collection\n    }\n    creator {\n      __typename\n      id\n      ...NewsletterV3Promo_publisher_User\n    }\n    ...useShowAuthorNewsletterV3Promo_post\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment NewsletterV3Promo_publisher_Collection on Collection {\n  id\n  slug\n  domain\n  name\n  newsletterV3 {\n    id\n    ...NewsletterV3Promo_newsletterV3\n    __typename\n  }\n  __typename\n}\n\nfragment NewsletterV3Promo_newsletterV3 on NewsletterV3 {\n  slug\n  name\n  description\n  promoHeadline\n  promoBody\n  ...NewsletterV3SubscribeButton_newsletterV3\n  ...NewsletterV3SubscribeByEmail_newsletterV3\n  __typename\n  id\n}\n\nfragment NewsletterV3SubscribeButton_newsletterV3 on NewsletterV3 {\n  id\n  name\n  slug\n  type\n  user {\n    id\n    name\n    username\n    __typename\n  }\n  collection {\n    slug\n    ...SusiClickable_collection\n    ...collectionDefaultBackgroundTheme_collection\n    __typename\n    id\n  }\n  ...SusiClickable_newsletterV3\n  ...useNewsletterV3Subscription_newsletterV3\n  __typename\n}\n\nfragment collectionDefaultBackgroundTheme_collection on Collection {\n  colorPalette {\n    ...collectionDefaultBackgroundTheme_colorPalette\n    __typename\n  }\n  customStyleSheet {\n    id\n    ...collectionDefaultBackgroundTheme_customStyleSheet\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment collectionDefaultBackgroundTheme_colorPalette on ColorPalette {\n  ...customDefaultBackgroundTheme_colorPalette\n  __typename\n}\n\nfragment collectionDefaultBackgroundTheme_customStyleSheet on CustomStyleSheet {\n  id\n  ...customDefaultBackgroundTheme_customStyleSheet\n  __typename\n}\n\nfragment SusiClickable_newsletterV3 on NewsletterV3 {\n  ...SusiContainer_newsletterV3\n  __typename\n  id\n}\n\nfragment SusiContainer_newsletterV3 on NewsletterV3 {\n  ...SignInOptions_newsletterV3\n  ...SignUpOptions_newsletterV3\n  __typename\n  id\n}\n\nfragment SignInOptions_newsletterV3 on NewsletterV3 {\n  id\n  name\n  __typename\n}\n\nfragment SignUpOptions_newsletterV3 on NewsletterV3 {\n  id\n  name\n  __typename\n}\n\nfragment NewsletterV3SubscribeByEmail_newsletterV3 on NewsletterV3 {\n  id\n  slug\n  type\n  user {\n    id\n    name\n    username\n    __typename\n  }\n  collection {\n    ...collectionDefaultBackgroundTheme_collection\n    ...collectionUrl_collection\n    __typename\n    id\n  }\n  __typename\n}\n\nfragment useShowCollectionNewsletterV3Promo_collection on Collection {\n  id\n  slug\n  newsletterV3 {\n    slug\n    showPromo\n    __typename\n    id\n  }\n  __typename\n}\n\nfragment NewsletterV3Promo_publisher_User on User {\n  id\n  username\n  name\n  viewerEdge {\n    isUser\n    __typename\n    id\n  }\n  newsletterV3 {\n    id\n    ...NewsletterV3Promo_newsletterV3\n    __typename\n  }\n  __typename\n}\n\nfragment useShowAuthorNewsletterV3Promo_post on Post {\n  id\n  collection {\n    id\n    __typename\n  }\n  creator {\n    ...useShowAuthorNewsletterV3Promo_user\n    __typename\n    id\n  }\n  __typename\n}\n\nfragment useShowAuthorNewsletterV3Promo_user on User {\n  id\n  username\n  newsletterV3 {\n    id\n    showPromo\n    slug\n    __typename\n  }\n  __typename\n}\n\nfragment Wall_post on Post {\n  content(postMeteringOptions: $postMeteringOptions) {\n    isLockedPreviewOnly\n    __typename\n  }\n  isLocked\n  isMarkedPaywallOnly\n  ...PayWall_post\n  ...RegWall_post\n  ...PayWallWrapper_post\n  __typename\n  id\n}\n\nfragment PayWall_post on Post {\n  id\n  creator {\n    id\n    name\n    imageId\n    __typename\n  }\n  __typename\n}\n\nfragment RegWall_post on Post {\n  id\n  lockedSource\n  ...SusiClickable_post\n  __typename\n}\n\nfragment SusiClickable_post on Post {\n  id\n  mediumUrl\n  ...SusiContainer_post\n  __typename\n}\n\nfragment SusiContainer_post on Post {\n  id\n  __typename\n}\n\nfragment PayWallWrapper_post on Post {\n  id\n  creator {\n    id\n    name\n    imageId\n    __typename\n  }\n  primaryTopic {\n    slug\n    __typename\n    id\n  }\n  topics {\n    slug\n    __typename\n  }\n  __typename\n}\n\nfragment InteractivePostBody_post on Post {\n  id\n  content(postMeteringOptions: $postMeteringOptions) {\n    isLockedPreviewOnly\n    bodyModel {\n      ...PostBody_bodyModel\n      paragraphs {\n        ...HighlighSegmentContext_paragraph\n        ...NormalizeHighlights_paragraph\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  creator {\n    id\n    allowNotes\n    ...PostBody_creator\n    __typename\n  }\n  ...ActiveSelectionContext_post\n  __typename\n}\n\nfragment PostBody_bodyModel on RichText {\n  sections {\n    name\n    startIndex\n    textLayout\n    imageLayout\n    backgroundImage {\n      id\n      originalHeight\n      originalWidth\n      __typename\n    }\n    videoLayout\n    backgroundVideo {\n      videoId\n      originalHeight\n      originalWidth\n      previewImageId\n      __typename\n    }\n    __typename\n  }\n  paragraphs {\n    id\n    ...PostBodySection_paragraph\n    __typename\n  }\n  ...normalizedBodyModel_richText\n  __typename\n}\n\nfragment PostBodySection_paragraph on Paragraph {\n  name\n  ...PostBodyParagraph_paragraph\n  __typename\n  id\n}\n\nfragment PostBodyParagraph_paragraph on Paragraph {\n  name\n  type\n  ...ImageParagraph_paragraph\n  ...TextParagraph_paragraph\n  ...IframeParagraph_paragraph\n  ...MixtapeParagraph_paragraph\n  ...CodeBlockParagraph_paragraph\n  __typename\n  id\n}\n\nfragment ImageParagraph_paragraph on Paragraph {\n  href\n  layout\n  metadata {\n    id\n    originalHeight\n    originalWidth\n    focusPercentX\n    focusPercentY\n    alt\n    __typename\n  }\n  ...Markups_paragraph\n  ...ParagraphRefsMapContext_paragraph\n  ...PostAnnotationsMarker_paragraph\n  __typename\n  id\n}\n\nfragment Markups_paragraph on Paragraph {\n  name\n  text\n  hasDropCap\n  dropCapImage {\n    ...MarkupNode_data_dropCapImage\n    __typename\n    id\n  }\n  markups {\n    type\n    start\n    end\n    href\n    anchorType\n    userId\n    linkMetadata {\n      httpStatus\n      __typename\n    }\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment MarkupNode_data_dropCapImage on ImageMetadata {\n  ...DropCap_image\n  __typename\n  id\n}\n\nfragment DropCap_image on ImageMetadata {\n  id\n  originalHeight\n  originalWidth\n  __typename\n}\n\nfragment ParagraphRefsMapContext_paragraph on Paragraph {\n  id\n  name\n  text\n  __typename\n}\n\nfragment PostAnnotationsMarker_paragraph on Paragraph {\n  ...PostViewNoteCard_paragraph\n  __typename\n  id\n}\n\nfragment PostViewNoteCard_paragraph on Paragraph {\n  name\n  __typename\n  id\n}\n\nfragment TextParagraph_paragraph on Paragraph {\n  type\n  hasDropCap\n  codeBlockMetadata {\n    mode\n    lang\n    __typename\n  }\n  ...Markups_paragraph\n  ...ParagraphRefsMapContext_paragraph\n  __typename\n  id\n}\n\nfragment IframeParagraph_paragraph on Paragraph {\n  iframe {\n    mediaResource {\n      id\n      iframeSrc\n      iframeHeight\n      iframeWidth\n      title\n      __typename\n    }\n    __typename\n  }\n  layout\n  ...getEmbedlyCardUrlParams_paragraph\n  ...Markups_paragraph\n  __typename\n  id\n}\n\nfragment getEmbedlyCardUrlParams_paragraph on Paragraph {\n  type\n  iframe {\n    mediaResource {\n      iframeSrc\n      __typename\n    }\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment MixtapeParagraph_paragraph on Paragraph {\n  type\n  mixtapeMetadata {\n    href\n    mediaResource {\n      mediumCatalog {\n        id\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  ...GenericMixtapeParagraph_paragraph\n  __typename\n  id\n}\n\nfragment GenericMixtapeParagraph_paragraph on Paragraph {\n  text\n  mixtapeMetadata {\n    href\n    thumbnailImageId\n    __typename\n  }\n  markups {\n    start\n    end\n    type\n    href\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment CodeBlockParagraph_paragraph on Paragraph {\n  codeBlockMetadata {\n    lang\n    mode\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment normalizedBodyModel_richText on RichText {\n  paragraphs {\n    markups {\n      type\n      __typename\n    }\n    codeBlockMetadata {\n      lang\n      mode\n      __typename\n    }\n    ...getParagraphHighlights_paragraph\n    ...getParagraphPrivateNotes_paragraph\n    __typename\n  }\n  sections {\n    startIndex\n    ...getSectionEndIndex_section\n    __typename\n  }\n  ...getParagraphStyles_richText\n  ...getParagraphSpaces_richText\n  __typename\n}\n\nfragment getParagraphHighlights_paragraph on Paragraph {\n  name\n  __typename\n  id\n}\n\nfragment getParagraphPrivateNotes_paragraph on Paragraph {\n  name\n  __typename\n  id\n}\n\nfragment getSectionEndIndex_section on Section {\n  startIndex\n  __typename\n}\n\nfragment getParagraphStyles_richText on RichText {\n  paragraphs {\n    text\n    type\n    __typename\n  }\n  sections {\n    ...getSectionEndIndex_section\n    __typename\n  }\n  __typename\n}\n\nfragment getParagraphSpaces_richText on RichText {\n  paragraphs {\n    layout\n    metadata {\n      originalHeight\n      originalWidth\n      id\n      __typename\n    }\n    type\n    ...paragraphExtendsImageGrid_paragraph\n    __typename\n  }\n  ...getSeriesParagraphTopSpacings_richText\n  ...getPostParagraphTopSpacings_richText\n  __typename\n}\n\nfragment paragraphExtendsImageGrid_paragraph on Paragraph {\n  layout\n  type\n  __typename\n  id\n}\n\nfragment getSeriesParagraphTopSpacings_richText on RichText {\n  paragraphs {\n    id\n    __typename\n  }\n  sections {\n    startIndex\n    __typename\n  }\n  __typename\n}\n\nfragment getPostParagraphTopSpacings_richText on RichText {\n  paragraphs {\n    layout\n    text\n    codeBlockMetadata {\n      lang\n      mode\n      __typename\n    }\n    __typename\n  }\n  sections {\n    startIndex\n    __typename\n  }\n  __typename\n}\n\nfragment HighlighSegmentContext_paragraph on Paragraph {\n  ...ParagraphRefsMapContext_paragraph\n  __typename\n  id\n}\n\nfragment NormalizeHighlights_paragraph on Paragraph {\n  name\n  text\n  __typename\n  id\n}\n\nfragment PostBody_creator on User {\n  ...PostNotesMarkers_creator\n  __typename\n  id\n}\n\nfragment PostNotesMarkers_creator on User {\n  id\n  name\n  __typename\n}\n\nfragment ActiveSelectionContext_post on Post {\n  id\n  ...SelectionMenu_post\n  ...PostNewNoteCard_post\n  __typename\n}\n\nfragment SelectionMenu_post on Post {\n  id\n  isPublished\n  isLocked\n  latestPublishedVersion\n  visibility\n  creator {\n    id\n    allowNotes\n    __typename\n  }\n  __typename\n}\n\nfragment PostNewNoteCard_post on Post {\n  id\n  latestPublishedVersion\n  __typename\n}\n\nfragment WithResponsesSidebar_post on Post {\n  id\n  ...ThreadedResponsesSidebar_post\n  __typename\n}\n\nfragment ThreadedResponsesSidebar_post on Post {\n  id\n  ...ThreadedResponsesSidebarContent_post\n  __typename\n}\n\nfragment ThreadedResponsesSidebarContent_post on Post {\n  id\n  postResponses {\n    count\n    __typename\n  }\n  collection {\n    id\n    viewerEdge {\n      id\n      isEditor\n      __typename\n    }\n    __typename\n  }\n  creator {\n    id\n    __typename\n  }\n  ...ThreadedReplies_post\n  __typename\n}\n\nfragment ThreadedReplies_post on Post {\n  __typename\n  id\n  ...ThreadedReply_post\n}\n\nfragment ThreadedReply_post on Post {\n  __typename\n  id\n  ...ReadOrEditSimpleResponse_post\n  ...StoryResponse_post\n}\n\nfragment ReadOrEditSimpleResponse_post on Post {\n  __typename\n  id\n  ...SimpleResponse_post\n}\n\nfragment SimpleResponse_post on Post {\n  id\n  ...ResponseHeader_post\n  __typename\n}\n\nfragment ResponseHeader_post on Post {\n  __typename\n  id\n  creator {\n    id\n    __typename\n  }\n  ...ResponsePopoverMenu_post\n}\n\nfragment ResponsePopoverMenu_post on Post {\n  id\n  ...ReportUserMenuItem_post\n  ...HideResponseMenuItem_post\n  ...BlockUserMenuItem_post\n  __typename\n}\n\nfragment ReportUserMenuItem_post on Post {\n  __typename\n  id\n  ...SusiClickable_post\n}\n\nfragment HideResponseMenuItem_post on Post {\n  __typename\n  id\n  collection {\n    id\n    viewerEdge {\n      id\n      isEditor\n      __typename\n    }\n    __typename\n  }\n  creator {\n    id\n    __typename\n  }\n}\n\nfragment BlockUserMenuItem_post on Post {\n  __typename\n  id\n  creator {\n    id\n    __typename\n  }\n}\n\nfragment StoryResponse_post on Post {\n  id\n  ...ResponseHeader_post\n  __typename\n}\n\nfragment PostCanonicalizer_post on Post {\n  mediumUrl\n  __typename\n  id\n}\n\nfragment PostFooterActionsBar_post on Post {\n  id\n  visibility\n  isPublished\n  allowResponses\n  postResponses {\n    count\n    __typename\n  }\n  isLimitedState\n  creator {\n    id\n    __typename\n  }\n  collection {\n    id\n    __typename\n  }\n  ...BookmarkButton_post\n  ...MultiVote_post\n  ...SharePostButtons_post\n  ...PostFooterSocialPopover_post\n  ...OverflowMenuButtonWithNegativeSignal_post\n  __typename\n}\n\nfragment BookmarkButton_post on Post {\n  visibility\n  ...SusiClickable_post\n  ...AddToCatalogBookmarkButton_post\n  __typename\n  id\n}\n\nfragment AddToCatalogBookmarkButton_post on Post {\n  ...AddToCatalogBase_post\n  __typename\n  id\n}\n\nfragment AddToCatalogBase_post on Post {\n  id\n  __typename\n}\n\nfragment MultiVote_post on Post {\n  id\n  creator {\n    id\n    ...SusiClickable_user\n    __typename\n  }\n  isPublished\n  ...SusiClickable_post\n  collection {\n    id\n    slug\n    __typename\n  }\n  isLimitedState\n  ...MultiVoteCount_post\n  __typename\n}\n\nfragment MultiVoteCount_post on Post {\n  id\n  ...PostVotersNetwork_post\n  __typename\n}\n\nfragment PostVotersNetwork_post on Post {\n  id\n  voterCount\n  recommenders {\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment SharePostButtons_post on Post {\n  id\n  isLimitedState\n  visibility\n  mediumUrl\n  ...SharePostButton_post\n  __typename\n}\n\nfragment SharePostButton_post on Post {\n  id\n  __typename\n}\n\nfragment PostFooterSocialPopover_post on Post {\n  id\n  mediumUrl\n  title\n  ...SharePostButton_post\n  __typename\n}\n\nfragment OverflowMenuButtonWithNegativeSignal_post on Post {\n  id\n  ...OverflowMenuWithNegativeSignal_post\n  ...CreatorActionOverflowPopover_post\n  __typename\n}\n\nfragment OverflowMenuWithNegativeSignal_post on Post {\n  id\n  creator {\n    id\n    __typename\n  }\n  collection {\n    id\n    __typename\n  }\n  ...OverflowMenuItemUndoClaps_post\n  __typename\n}\n\nfragment OverflowMenuItemUndoClaps_post on Post {\n  id\n  clapCount\n  ...ClapMutation_post\n  __typename\n}\n\nfragment ClapMutation_post on Post {\n  __typename\n  id\n  clapCount\n  ...MultiVoteCount_post\n}\n\nfragment CreatorActionOverflowPopover_post on Post {\n  allowResponses\n  id\n  statusForCollection\n  isLocked\n  isPublished\n  clapCount\n  mediumUrl\n  pinnedAt\n  pinnedByCreatorAt\n  curationEligibleAt\n  mediumUrl\n  responseDistribution\n  visibility\n  inResponseToPostResult {\n    __typename\n  }\n  inResponseToCatalogResult {\n    __typename\n  }\n  pendingCollection {\n    id\n    name\n    creator {\n      id\n      __typename\n    }\n    avatar {\n      id\n      __typename\n    }\n    domain\n    slug\n    __typename\n  }\n  creator {\n    id\n    ...MutePopoverOptions_creator\n    ...auroraHooks_publisher\n    __typename\n  }\n  collection {\n    id\n    name\n    creator {\n      id\n      __typename\n    }\n    avatar {\n      id\n      __typename\n    }\n    domain\n    slug\n    ...MutePopoverOptions_collection\n    ...auroraHooks_publisher\n    __typename\n  }\n  ...useIsPinnedInContext_post\n  ...NewsletterV3EmailToSubscribersMenuItem_post\n  ...OverflowMenuItemUndoClaps_post\n  __typename\n}\n\nfragment auroraHooks_publisher on Publisher {\n  __typename\n  ... on Collection {\n    isAuroraEligible\n    isAuroraVisible\n    viewerEdge {\n      id\n      isEditor\n      __typename\n    }\n    __typename\n    id\n  }\n  ... on User {\n    isAuroraVisible\n    __typename\n    id\n  }\n}\n\nfragment useIsPinnedInContext_post on Post {\n  id\n  collection {\n    id\n    __typename\n  }\n  pendingCollection {\n    id\n    __typename\n  }\n  pinnedAt\n  pinnedByCreatorAt\n  __typename\n}\n\nfragment NewsletterV3EmailToSubscribersMenuItem_post on Post {\n  id\n  creator {\n    id\n    newsletterV3 {\n      id\n      subscribersCount\n      __typename\n    }\n    __typename\n  }\n  isNewsletter\n  isAuthorNewsletter\n  __typename\n}\n\nfragment PostHeader_post on Post {\n  id\n  collection {\n    ...NewsletterV3PostHeaderCTA_collection\n    __typename\n    id\n  }\n  creator {\n    ...EntityDrivenSubscriptionCallToAction_creator\n    __typename\n    id\n  }\n  firstPublishedAt\n  isLocked\n  isNewsletter\n  layerCake\n  tags {\n    id\n    __typename\n  }\n  topics {\n    name\n    __typename\n  }\n  ...MeterController_post\n  ...PostNoteMissingNotification_post\n  __typename\n}\n\nfragment NewsletterV3PostHeaderCTA_collection on Collection {\n  id\n  domain\n  slug\n  name\n  newsletterV3 {\n    id\n    slug\n    name\n    __typename\n  }\n  __typename\n}\n\nfragment EntityDrivenSubscriptionCallToAction_creator on User {\n  __typename\n  id\n  name\n  ...useShouldShowEntityDrivenSubscription_creator\n}\n\nfragment useShouldShowEntityDrivenSubscription_creator on User {\n  id\n  __typename\n}\n\nfragment MeterController_post on Post {\n  creator {\n    id\n    __typename\n  }\n  isLocked\n  lockedSource\n  ...LIHighlightMeter_post\n  ...LOHighlightMeter_post\n  ...SusiContainer_post\n  __typename\n  id\n}\n\nfragment LIHighlightMeter_post on Post {\n  id\n  ...UpsellClickable_post\n  __typename\n}\n\nfragment UpsellClickable_post on Post {\n  id\n  collection {\n    id\n    __typename\n  }\n  sequence {\n    sequenceId\n    __typename\n  }\n  creator {\n    id\n    __typename\n  }\n  __typename\n}\n\nfragment LOHighlightMeter_post on Post {\n  id\n  __typename\n}\n\nfragment PostNoteMissingNotification_post on Post {\n  id\n  __typename\n}\n\nfragment PostBylineHeader_post on Post {\n  id\n  ...PostBylineHeaderInfos_post\n  ...PostBylineHeaderActionsButtons_post\n  ...InResponseToEntityPreview_post\n  ...OverflowMenuButtonWithNegativeSignal_post\n  __typename\n}\n\nfragment PostBylineHeaderInfos_post on Post {\n  id\n  firstPublishedAt\n  readingTime\n  ...DraftStatus_post\n  ...Star_post\n  __typename\n}\n\nfragment DraftStatus_post on Post {\n  id\n  pendingCollection {\n    id\n    creator {\n      id\n      __typename\n    }\n    ...BoldCollectionName_collection\n    __typename\n  }\n  statusForCollection\n  creator {\n    id\n    __typename\n  }\n  isPublished\n  __typename\n}\n\nfragment BoldCollectionName_collection on Collection {\n  id\n  name\n  __typename\n}\n\nfragment Star_post on Post {\n  id\n  creator {\n    id\n    __typename\n  }\n  __typename\n}\n\nfragment PostBylineHeaderActionsButtons_post on Post {\n  ...BookmarkButton_post\n  ...SharePostButtons_post\n  __typename\n  id\n}\n\nfragment InResponseToEntityPreview_post on Post {\n  id\n  inResponseToEntityType\n  __typename\n}\n\nfragment usePostUrl_post on Post {\n  id\n  creator {\n    ...userUrl_user\n    __typename\n    id\n  }\n  collection {\n    id\n    domain\n    slug\n    __typename\n  }\n  isSeries\n  mediumUrl\n  sequence {\n    slug\n    __typename\n  }\n  uniqueSlug\n  __typename\n}\n\nfragment buildBranchViewData_post on Post {\n  creator {\n    name\n    id\n    __typename\n  }\n  collection {\n    name\n    id\n    __typename\n  }\n  layerCake\n  primaryTopic {\n    id\n    slug\n    name\n    __typename\n  }\n  content(postMeteringOptions: $postMeteringOptions) {\n    isLockedPreviewOnly\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment PostMetadata_post on Post {\n  id\n  socialTitle\n  socialDek\n  noIndex\n  curationStatus\n  canonicalUrl\n  mediumUrl\n  metaDescription\n  latestPublishedAt\n  visibility\n  isLimitedState\n  readingTime\n  creator {\n    name\n    twitterScreenName\n    ...userUrl_user\n    __typename\n    id\n  }\n  collection {\n    twitterUsername\n    facebookPageId\n    __typename\n    id\n  }\n  previewContent {\n    subtitle\n    __typename\n  }\n  previewImage {\n    id\n    alt\n    focusPercentX\n    focusPercentY\n    originalHeight\n    originalWidth\n    __typename\n  }\n  isShortform\n  noIndex\n  curationStatus\n  ...PostJsonLd_post\n  ...postMetaDescription_post\n  ...shortformPostMetaDescription_post\n  ...shouldIndexPost_post\n  ...shortformPostTitle_post\n  ...getTitleDetails_post\n  ...getTitleForPost_post\n  __typename\n}\n\nfragment PostJsonLd_post on Post {\n  id\n  title\n  seoTitle\n  mediumUrl\n  creator {\n    name\n    username\n    ...userUrl_user\n    __typename\n    id\n  }\n  collection {\n    id\n    name\n    domain\n    slug\n    logo {\n      id\n      originalWidth\n      originalHeight\n      __typename\n    }\n    __typename\n  }\n  previewImage {\n    id\n    focusPercentX\n    focusPercentY\n    originalWidth\n    originalHeight\n    __typename\n  }\n  isLocked\n  firstPublishedAt\n  updatedAt\n  isShortform\n  shortformType\n  ...getTitleForPost_post\n  __typename\n}\n\nfragment getTitleForPost_post on Post {\n  id\n  title\n  ...postTitle_post\n  ...getTitleDetails_post\n  __typename\n}\n\nfragment postTitle_post on Post {\n  id\n  title\n  seoTitle\n  firstPublishedAt\n  ...getPostContentAsString_post\n  ...appendPostContext_post\n  collection {\n    id\n    name\n    domain\n    ...maybeAppendProductName_collection\n    __typename\n  }\n  creator {\n    name\n    __typename\n    id\n  }\n  previewContent {\n    subtitle\n    __typename\n  }\n  __typename\n}\n\nfragment getPostContentAsString_post on Post {\n  content(postMeteringOptions: $postMeteringOptions) {\n    bodyModel {\n      paragraphs {\n        text\n        type\n        mixtapeMetadata {\n          href\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment appendPostContext_post on Post {\n  id\n  sequence {\n    title\n    __typename\n  }\n  collection {\n    name\n    __typename\n    id\n  }\n  creator {\n    name\n    __typename\n    id\n  }\n  __typename\n}\n\nfragment maybeAppendProductName_collection on Collection {\n  id\n  domain\n  __typename\n}\n\nfragment getTitleDetails_post on Post {\n  id\n  content(postMeteringOptions: $postMeteringOptions) {\n    bodyModel {\n      ...GetTitleIndexMap_bodyModel\n      __typename\n    }\n    __typename\n  }\n  ...getPostContentAsString_post\n  __typename\n}\n\nfragment GetTitleIndexMap_bodyModel on RichText {\n  paragraphs {\n    type\n    text\n    __typename\n  }\n  __typename\n}\n\nfragment postMetaDescription_post on Post {\n  id\n  title\n  seoDescription\n  metaDescription\n  creator {\n    id\n    name\n    __typename\n  }\n  collection {\n    id\n    name\n    __typename\n  }\n  previewContent {\n    subtitle\n    __typename\n  }\n  ...getPostContentAsString_post\n  __typename\n}\n\nfragment shortformPostMetaDescription_post on Post {\n  id\n  metaDescription\n  seoDescription\n  shortformType\n  title\n  ...getPostContentAsString_post\n  __typename\n}\n\nfragment shouldIndexPost_post on Post {\n  id\n  firstPublishedAt\n  isLimitedState\n  isShortform\n  shortformType\n  visibility\n  curationStatus\n  creator {\n    name\n    atsQualifiedAt\n    customDomainState {\n      live {\n        status\n        isSubdomain\n        __typename\n      }\n      __typename\n    }\n    __typename\n    id\n  }\n  collection {\n    customDomainState {\n      live {\n        status\n        isSubdomain\n        __typename\n      }\n      __typename\n    }\n    creator {\n      atsQualifiedAt\n      __typename\n      id\n    }\n    ptsQualifiedAt\n    __typename\n    id\n  }\n  noIndex\n  isIndexable\n  ...getPostContentAsString_post\n  __typename\n}\n\nfragment shortformPostTitle_post on Post {\n  id\n  title\n  seoTitle\n  ...getPostContentAsString_post\n  ...appendPostContext_post\n  collection {\n    ...maybeAppendProductName_collection\n    __typename\n    id\n  }\n  __typename\n}\n\nfragment SuspendedBannerLoader_post on Post {\n  id\n  isSuspended\n  __typename\n}\n\nfragment Footer_post on Post {\n  id\n  collection {\n    id\n    ...PostFooterCollectionButton_collection\n    __typename\n  }\n  responseRootPost {\n    post {\n      id\n      __typename\n    }\n    __typename\n  }\n  ...PostFooterBylineAurora_post\n  ...PostNextFiveStories_post\n  ...InternalLinks_post\n  __typename\n}\n\nfragment PostFooterCollectionButton_collection on Collection {\n  id\n  name\n  ...collectionUrl_collection\n  __typename\n}\n\nfragment PostFooterBylineAurora_post on Post {\n  id\n  creator {\n    name\n    username\n    bio\n    id\n    ...UserFollowButton_user\n    ...auroraHooks_publisher\n    ...userUrl_user\n    ...UserSubscribeButton_user\n    __typename\n  }\n  collection {\n    name\n    description\n    ...CollectionFollowButton_collection\n    ...collectionUrl_collection\n    __typename\n    id\n  }\n  ...UserFollowButton_post\n  ...CollectionFollowButton_post\n  ...useShowAuthorNewsletterV3Promo_post\n  __typename\n}\n\nfragment UserFollowButton_post on Post {\n  collection {\n    id\n    __typename\n  }\n  ...UserFollowButtonSignedOut_post\n  __typename\n  id\n}\n\nfragment UserFollowButtonSignedOut_post on Post {\n  ...SusiClickable_post\n  __typename\n  id\n}\n\nfragment CollectionFollowButton_post on Post {\n  __typename\n  id\n}\n\nfragment PostNextFiveStories_post on Post {\n  firstPublishedAt\n  pinnedAt\n  collection {\n    id\n    __typename\n  }\n  creator {\n    id\n    __typename\n  }\n  __typename\n  id\n}\n\nfragment InternalLinks_post on Post {\n  id\n  internalLinks(paging: {limit: 8}) {\n    items {\n      ... on Post {\n        ...LORecirc_post\n        __typename\n        id\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment LORecirc_post on Post {\n  id\n  ...PostPresentationTracker_post\n  ...ReadNextPostCard_post\n  __typename\n}\n\nfragment PostPresentationTracker_post on Post {\n  id\n  visibility\n  previewContent {\n    isFullContent\n    __typename\n  }\n  collection {\n    id\n    slug\n    __typename\n  }\n  __typename\n}\n\nfragment ReadNextPostCard_post on Post {\n  id\n  title\n  mediumUrl\n  creator {\n    ...ReadNextPostCard_user\n    __typename\n    id\n  }\n  previewContent {\n    subtitle\n    __typename\n  }\n  collection {\n    id\n    name\n    ...collectionUrl_collection\n    __typename\n  }\n  previewImage {\n    id\n    alt\n    focusPercentX\n    focusPercentY\n    __typename\n  }\n  clapCount\n  ...usePostUrl_post\n  __typename\n}\n\nfragment ReadNextPostCard_user on User {\n  ...UserAvatar_user\n  ...userUrl_user\n  ...UserMentionTooltip_user\n  __typename\n  id\n}\n\nfragment UserMentionTooltip_user on User {\n  id\n  name\n  username\n  bio\n  imageId\n  mediumMemberAt\n  ...UserAvatar_user\n  ...UserFollowButton_user\n  __typename\n}\n\nfragment ThanksTo_post on Post {\n  id\n  creator {\n    id\n    __typename\n  }\n  collaborators {\n    id\n    user {\n      id\n      name\n      __typename\n    }\n    state\n    __typename\n  }\n  __typename\n}\n"
    }
    gql_json = utils.post_url(graphql_url, json_data=data)
    if not gql_json:
        return None

    post_json = gql_json['data']['postResult']
    if save_debug:
        utils.write_file(post_json, './debug/debug.json')

    item = {}
    item['id'] = post_json['id']
    item['url'] = post_json['mediumUrl']
    item['title'] = post_json['title']

    dt = datetime.fromtimestamp(post_json['firstPublishedAt'] / 1000).replace(tzinfo=timezone.utc)
    item['date_published'] = dt.isoformat()
    item['_timestamp'] = dt.timestamp()
    item['_display_date'] = '{}. {}, {}'.format(dt.strftime('%b'), dt.day, dt.year)
    dt = datetime.fromtimestamp(post_json['updatedAt'] / 1000).replace(tzinfo=timezone.utc)
    item['date_modified'] = dt.isoformat()

    if post_json.get('creator'):
        item['author'] = {}
        item['author']['name'] = post_json['creator']['name']

    item['tags'] = []
    if post_json.get('tags'):
        for it in post_json['tags']:
            item['tags'].append(it['id'].title())
    if post_json.get('topics'):
        for it in post_json['topics']:
            item['tags'].append(it['name'].title())
    if item.get('tags'):
        item['tags'] = list(set(item['tags']))
    else:
        del item['tags']

    if post_json.get('previewImage') and post_json['previewImage'].get('id'):
        item['_image'] = 'https://miro.medium.com/max/1000/{}'.format(post_json['previewImage']['id'])

    if post_json.get('previewContent'):
        item['summary'] = post_json['previewContent']['subtitle']

    item['content_html'] = ''
    if post_json['content']['isLockedPreviewOnly']:
        # The googlecache version seems to have the full text
        content_json = get_apollo_state_content(url)
        if content_json:
            if save_debug:
                utils.write_file(content_json, './debug/content.json')
        else:
            content_json = post_json['content']
    else:
        content_json = post_json['content']
    for paragraph in content_json['bodyModel']['paragraphs']:
        paragraph_type = paragraph['type'].lower()
        start_tag = ''
        if paragraph_type == 'p' or paragraph_type == 'h1' or paragraph_type == 'h2' or paragraph_type == 'h3' or paragraph_type == 'h4':
            start_tag += '<{}>'.format(paragraph_type)
            paragraph_text = paragraph['text']
            end_tag = '</{}>'.format(paragraph_type)

        elif paragraph_type == 'img':
            start_tag = add_image(paragraph['metadata'], paragraph['text'])
            end_tag = ''
            paragraph_text = ''

        elif paragraph_type == 'pre':
            start_tag += '<pre style="margin-left:2em; padding:0.5em; white-space:pre-wrap; background:#F2F2F2;">'
            end_tag = '</pre>'
            if not paragraph.get('markups'):
                # Escape HTML characters so they are not rendered
                paragraph_text = html.escape(paragraph['text'])
            else:
                # If there are markups, escaping the characters will mess up the alignment
                paragraph_text = paragraph['text']

        elif paragraph_type == 'bq' or paragraph_type == 'pq':
            start_tag += '<blockquote style="border-left: 3px solid #ccc; margin: 1.5em 10px; padding: 0.5em 10px;">'
            end_tag = '</blockquote>'
            paragraph_text = paragraph['text']

        elif paragraph_type == 'oli' or paragraph_type == 'uli':
            start_tag = '<{}l><li>'.format(paragraph_type[0])
            end_tag = '</li></{}l>'.format(paragraph_type[0])
            paragraph_text = paragraph['text']

        elif paragraph_type == 'iframe':
            media_resource = paragraph['iframe']['mediaResource']
            iframe_src = media_resource['iframeSrc']
            if iframe_src.startswith('https://cdn.embedly.com'):
                # This is usually embeded media
                iframe_query = parse_qs(urlsplit(iframe_src).query)
                if 'src' in iframe_query:
                    iframe_src = iframe_query['src'][0]
                elif 'url' in iframe_query:
                    iframe_src = iframe_query['url'][0]
                start_tag += utils.add_embed(iframe_src)
                end_tag = ''
                paragraph_text = ''
            elif not iframe_src:
                iframe_html = utils.get_url_html('{}://{}/media/{}'.format(split_url.scheme, split_url.netloc, media_resource['id']))
                if iframe_html:
                    if save_debug:
                        utils.write_file(iframe_html, './debug/iframe.html')
                    m = re.search(r'src="https:\/\/gist\.github\.com\/([^\/]+)\/([^\.]+)\.js"', iframe_html)
                    if m:
                        gist = utils.get_url_html('https://gist.githubusercontent.com/{}/{}/raw'.format(m.group(1), m.group(2)))
                        if gist:
                            start_tag += '<pre style="margin-left:2em; padding:0.5em; white-space:pre-wrap; background:#F2F2F2;">{}</pre>'.format(gist)
                            end_tag = ''
                            paragraph_text = ''
                if not start_tag:
                    logger.warning('unhandled Medium media iframe in ' + item['url'])
            else:
                logger.warning('unhandled Medium iframe content in ' + item['url'])
                start_tag += '<p>Embedded content from <a href="{0}">{0}</a></p>'.format(iframe_src)
                end_tag = ''
                paragraph_text = ''

        elif paragraph_type == 'mixtape_embed':
            # start_tag += '<blockquote><ul><li>'
            # end_tag = '</li></ul></blockquote>'
            # paragraph_text = paragraph['text']
            src = urlsplit(paragraph['mixtapeMetadata']['href']).netloc
            paragraph_text = re.sub(r'…{}'.format(src), '', paragraph['text'])
            if paragraph['mixtapeMetadata'].get('thumbnailImageId'):
                start_tag += '<div><img src="https://miro.medium.com/max/128/{}" style="float:left; margin-right:8px; width:128px;" /><div style="overflow:hidden;">'.format(paragraph['mixtapeMetadata']['thumbnailImageId'])
                end_tag = '<br/><small>{}</small></div></div><div style="clear:left;">&nbsp;</div>'.format(src)
            else:
                start_tag += '<blockquote>'
                end_tag = '<br/><small>{}</small></blockquote>'.format(src)
        else:
            logger.warning('unhandled paragraph type {} in {}'.format(paragraph_type, url))
            continue

        if paragraph.get('markups'):
            starts = list(map(operator.itemgetter('start'), paragraph['markups']))
            ends = list(map(operator.itemgetter('end'), paragraph['markups']))
            markup_text = paragraph_text[0:min(starts)]
            for i in range(min(starts), max(ends) + 1):
                for n in range(len(starts)):
                    if starts[n] == i:
                        markup_type = paragraph['markups'][n]['type'].lower()
                        if markup_type == 'a':
                            href = ''
                            if paragraph['markups'][n]['anchorType'] == 'LINK':
                                href = paragraph['markups'][n]['href']
                            elif paragraph['markups'][n]['anchorType'] == 'USER':
                                href = 'https://medium.com/u/' + paragraph['markups'][n]['userId']
                            if href:
                                markup_text += '<a href="{}">'.format(href)
                            else:
                                logger.warning('unhandled anchor markup type {} in {}'.format(paragraph['markups'][n]['anchorType'], item['url']))
                                markup_text += '<a href="https://medium.com">'
                        elif markup_type == 'code' or markup_type == 'em' or markup_type == 'strong':
                            markup_text += '<{}>'.format(markup_type)
                        else:
                            logger.warning('unhandled markup type {} in {}'.format(markup_type, url))
                        starts[n] = -1

                for n in reversed(range(len(ends))):
                    if ends[n] == i:
                        markup_type = paragraph['markups'][n]['type'].lower()
                        if markup_type == 'a' or markup_type == 'code' or markup_type == 'em' or markup_type == 'strong':
                            markup_text += '</{}>'.format(markup_type)
                        else:
                            logger.warning('unhandled markup type {} in {}'.format(markup_type, url))
                        ends[n] = -1

                if i < len(paragraph_text):
                    markup_text += paragraph_text[i]

            markup_text += paragraph_text[i + 1:]
        else:
            markup_text = paragraph_text
        markup_text = markup_text.replace('\n', '<br />')

        if paragraph_type == 'p' and paragraph.get('hasDropCap') and paragraph['hasDropCap']:
            if not markup_text.startswith('<'):
                markup_text = '<span style="float:left; font-size:4em; line-height:0.8em;">{}</span>{}'.format(markup_text[0], markup_text[1:])
                end_tag += '<div style="clear:left;"></div>'
            else:
                logger.warning('unhandled DropCap in ' + item['url'])

        item['content_html'] += start_tag + markup_text + end_tag

    item['content_html'] = item['content_html'].replace('</ol><ol>', '').replace('</ul><ul>', '')
    item['content_html'] = re.sub(r'</(figure|table)>\s*<(figure|table)', r'</\1><div>&nbsp;</div><\2', item['content_html'])
    return item


def get_feed(url, args, site_json, save_debug=False):
    return rss.get_feed(url, args, site_json, save_debug, get_content)
